require 'bundler/capistrano'

# handle here instead to force full recompile and no symlink
#load 'deploy/assets'

set :application, "[app-name]"
set :repository,  "git@github.com:jehughes/rails4-example.git"
set :deploy_to, "/home/[location]/#{application}"

set :format, :pretty
set :log_level, :debug
#set :ssh_options, {verbose: :debug}

role :web, xxx
role :app, xxx
role :db,  xxx, :primary => true

set :user, "[user-name]"

set :scm, :git
set :scm_username, "[user-name]"
set :branch, 'master'
set :scm_verbose, true

set :use_sudo, false
default_run_options[:pty] = true
set :keep_releases, 3

# TODO: find a better way to do this, rvm?
set :default_environment, {
  'PATH' => "#{deploy_to}/gems/bin:#{deploy_to}/bin:#{ENV['PATH']}",
  'GEM_HOME' => "#{deploy_to}/gems",
  'BUNDLE_PATH' => "#{deploy_to}/gems" 
}

set :rails_env, :production
set :rake, "bundle exec rake"

before "deploy:finalize_update", "deploy:copy_git_ignored_config_files"
before "deploy:finalize_update", "deploy:assets:clean_out"
after  "deploy:update_code", "deploy:assets:precompile"

after  "deploy", "deploy:run_bundle_install"
after  "deploy:run_bundle_install", "deploy:migrate"
after  "deploy:migrate", "deploy:cleanup"
after  "deploy:cleanup", "deploy:restart"

namespace :deploy do

  desc "cause Passenger restart"
  task :restart do
    run "#{deploy_to}/bin/stop && #{deploy_to}/bin/start && touch #{current_path}/tmp/restart.txt"
  end
  
  desc "install the necessary prerequisites"
  task :run_bundle_install, :roles => :app do
    run "cd #{release_path} && bundle install"
  end
  
  desc "copy over files not stored in git: database.yml, private.yml"
  task :copy_git_ignored_config_files do    
    # since config/private.yml and config/database.yml are in .gitignore   
    begin
      run "cp #{shared_path}/config/database.yml #{release_path}/config && cp #{shared_path}/config/private.yml #{release_path}/config"
    rescue Exception
      puts "\nCOPYING OF database.yml AND/OR private.yml FAILED - CHECK THEY EXIST\n\n"
    end
  end
  
  namespace :assets do
    
    desc "compile assets"
    task :precompile, :roles => :web do
      run("cd #{release_path} && rake assets:precompile RAILS_ENV=#{rails_env}")
    end

    desc "fully clean-out assets to start fresh"
    task :clean_out, :roles => :web do
      run("rm -rf #{latest_release}/public/assets")
      run("rm -rf #{latest_release}/tmp/cache/assets")
      run("mkdir -p #{latest_release}/public/assets")
    end
  end
  
end
 
